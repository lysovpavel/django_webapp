# Generated by Django 3.1.1 on 2020-09-26 09:49

from django.db import migrations, models
import garpix_utils.file_field.file_field


class Migration(migrations.Migration):

    dependencies = [
        ('garpix_notify', '0004_auto_20200427_1344'),
    ]

    operations = [
        migrations.AddField(
            model_name='notify',
            name='telegram_chat_id',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Telegram ID пользователя/чата'),
        ),
        migrations.AddField(
            model_name='notify',
            name='viber_chat_id',
            field=models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Viber ID пользователя/чата'),
        ),
        migrations.AddField(
            model_name='notify',
            name='viber_secret_key',
            field=models.CharField(blank=True, default='', max_length=200, verbose_name='Ключ подключения Viber'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='is_telegram_enabled',
            field=models.BooleanField(default=True, help_text='Внимание! Telegram недоступен на серверах на территории РФ и работать на них не будет!.', verbose_name='Разрешить отправку Telegram'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='is_viber_enabled',
            field=models.BooleanField(default=True, verbose_name='Разрешить отправку Viber'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='telegram_api_key',
            field=models.CharField(blank=True, default='000000000:AAAAAAAAAA-AAAAAAAA-_AAAAAAAAAAAAAA', max_length=255, verbose_name='Telegram API Key'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_api_key',
            field=models.CharField(blank=True, default='000000000:AAAAAAAAAA-AAAAAAAA-_AAAAAAAAAAAAAA', max_length=255, verbose_name='Viber API Key'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_bot_avatar',
            field=models.ImageField(blank=True, null=True, upload_to=garpix_utils.file_field.file_field.get_file_path, verbose_name='Аватар viber бота'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_bot_name',
            field=models.CharField(blank=True, default='Viber bot', max_length=255, verbose_name='Название viber бота'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_failed_added_text',
            field=models.TextField(blank=True, default='Ошибка при привязке учетной записи. Пожалуйста, свяжитесь с техподдержкой', verbose_name='Viber - Текст провал, не добавлен код'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_success_added_text',
            field=models.TextField(blank=True, default='Ваша учетная запись успешно привязана к боту. Вы будете получать уведомления!', verbose_name='Viber - Текст успешно добавлен код'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_text_for_new_sub',
            field=models.TextField(blank=True, default='cпасибо за подписку, Введите secret_key чтобы получать сообщения от бота.', verbose_name='Viber - Текст  для новых подписчиков'),
        ),
        migrations.AddField(
            model_name='notifyconfig',
            name='viber_welcome_text',
            field=models.TextField(blank=True, default='для активации бота нужно отправить любое сообщения', verbose_name='Viber - Приветственный текст бота'),
        ),
        migrations.AddField(
            model_name='notifytemplate',
            name='telegram_chat_id',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Telegram ID пользователя/чата'),
        ),
        migrations.AddField(
            model_name='notifytemplate',
            name='viber_chat_id',
            field=models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Viber ID пользователя/чата'),
        ),
        migrations.AddField(
            model_name='notifytemplate',
            name='viber_secret_key',
            field=models.CharField(blank=True, default='', max_length=200, verbose_name='Ключ подключения Viber'),
        ),
        migrations.AddField(
            model_name='notifyuserlistparticipant',
            name='telegram_chat_id',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='Telegram ID пользователя/чата'),
        ),
        migrations.AddField(
            model_name='notifyuserlistparticipant',
            name='viber_chat_id',
            field=models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Viber ID пользователя/чата'),
        ),
        migrations.AddField(
            model_name='notifyuserlistparticipant',
            name='viber_secret_key',
            field=models.CharField(blank=True, default='', max_length=200, verbose_name='Ключ подключения Viber'),
        ),
        migrations.AlterField(
            model_name='notify',
            name='phone',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='notify',
            name='type',
            field=models.IntegerField(choices=[(0, 'E-mail'), (1, 'SMS'), (2, 'Push'), (3, 'Telegram'), (4, 'Viber')], verbose_name='Тип'),
        ),
        migrations.AlterField(
            model_name='notifyfile',
            name='file',
            field=models.FileField(max_length=1000, upload_to=garpix_utils.file_field.file_field.get_file_path, verbose_name='Файл'),
        ),
        migrations.AlterField(
            model_name='notifytemplate',
            name='phone',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Телефон'),
        ),
        migrations.AlterField(
            model_name='notifytemplate',
            name='type',
            field=models.IntegerField(choices=[(0, 'E-mail'), (1, 'SMS'), (2, 'Push'), (3, 'Telegram'), (4, 'Viber')], verbose_name='Тип'),
        ),
        migrations.AlterField(
            model_name='notifyuserlistparticipant',
            name='phone',
            field=models.CharField(blank=True, max_length=30, null=True, verbose_name='Телефон'),
        ),
    ]
